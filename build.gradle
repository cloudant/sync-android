// ************ //
// COMMON STUFF
// ************ //

apply plugin: 'java'

//
// General settings
//

allprojects {
    group = 'com.cloudant'
    version = '0.11.1-SNAPSHOT'
    description = """cloudant-sync"""
}

dependencies {
    compile project(':sync-core')
    compile project(':sync-javase')
    compile project(':sync-android')
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    //
    // Build plugins
    //

    buildscript {
        repositories {
            mavenCentral()
        }
        dependencies {
            classpath "net.saliman:gradle-cobertura-plugin:2.1.0"
        }
    }

    sourceCompatibility = 1.6
    targetCompatibility = 1.6

    defaultTasks 'build'

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "http://cloudant.github.io/cloudant-sync-eap/repository/" }
    }

    // local.gradle defines ghpages, so we want to publish somewhere specific for release
    if (project.hasProperty('ghpages')) {
        publishing {
            repositories {
                maven {
                    url "$ghpages/repository"
                }
            }
        }
    }

    //
    // Misc. tasks
    //

    task listJars << {
        configurations.testCompile.each { File file -> println file.name }
    }

}

//
// *** DOCS AND PUBLISHING ***
//

// see http://issues.gradle.org/browse/GRADLE-1876
// run javadoc over union of all projects
task docs(type: Javadoc) {

    options.encoding = "UTF-8"
    options.docEncoding = "UTF-8"
    options.charSet = "UTF-8"

    options.showFromPublic()
    title = "sync-android ${version} API"
    source subprojects.collect {project -> project.sourceSets.main.allJava.matching{exclude "**/*sql*/**", "**/common/**", "**/android/**", "**/mazha/**" }}
    classpath = files(subprojects.collect {project -> project.sourceSets.main.compileClasspath}) 
    destinationDir = new File(projectDir, 'build/docs')
}

// tasks below require the ghpages variable to be set
if (project.hasProperty('ghpages')) {
    task publishDocsVersioned(type: Sync, dependsOn: docs) {
        from "build/docs"
        into "$ghpages/docs/${rootProject.version}"
    }
        
    task publishDocsLatest(type: Sync, dependsOn: docs) {
        from "build/docs"
        into "$ghpages/docs/latest"
    }
    
    // Publish docs and maven artifacts to GH repo
    task publishAll(dependsOn: [publishDocsVersioned, publishDocsLatest, subprojects.publish])
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}
